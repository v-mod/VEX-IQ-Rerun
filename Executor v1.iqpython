{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nLeft = Motor(Ports.PORT1, False)\nRight = Motor(Ports.PORT6, False)\nPurple = Motor(Ports.PORT12, True)\nShooter = Motor(Ports.PORT8, False)\nBlueArm = Motor(Ports.PORT7, False)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n# \tAuthor:       Vivaan M & Aviral G\n# \tCreated:      07-12-2022\n# \tDescription:  Autonomous executer for Trainer v1.1 for 21549E\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\ndef setUp():\n    Left.spin(FORWARD)\n    Right.spin(FORWARD)\n    Purple.spin(FORWARD)\n    BlueArm.spin(FORWARD)\n    Shooter.spin(FORWARD)\n    BlueArm.set_max_torque(100,PERCENT)\n    Shooter.set_max_torque(100,PERCENT)\n\ndef move(LeftM,RightM,ShootM,BlueM,PurpleM,Iter):\n    # Run the motors at their stored rpm\n    Left.set_velocity(LeftM,PERCENT)\n    Right.set_velocity(RightM,PERCENT)\n    Shooter.set_velocity(ShootM,PERCENT)\n    BlueArm.set_velocity(BlueM,PERCENT)\n    Purple.set_velocity(PurpleM,PERCENT)\n    print('')\n    print('Setting Speeds on Iteration '+str(Iter)+': ')\n    print('Drivebase Left Motor (P1): ', end=\"\")\n    print(LeftM)\n    print('Drivebase Right Motor (P6): ', end=\"\")\n    print(RightM)\n    print('Shooter Motor (P8): ', end=\"\")\n    print(ShootM)\n    print('Blue Motor (P7): ', end=\"\")\n    print(BlueM)\n    print('Purple Motor (P12): ', end=\"\")\n    print(PurpleM)\n    print('')\n# This is the function responsible for reading the stored data and playing it\ndef read():\n    # Opening the file\n    f=open('auton.txt')\n    # Setting up the motors\n    # Setting the velocity\n    move(0,0,0,0,0,0)\n    # Starting the motors\n    setUp()\n    # Looping through all the split content\n    for r in range(1,1501):\n        # Verbose Logs: Iteration\n        print('Iteration: ', end='')\n        print(r)\n        # Reading the next line of the file\n        x=f.readline()\n        # Verbose Logs: Data that was read from the file\n        print(\"Read Data: \", end=\"\")\n        print(x, end='')\n        # Making the verbose logs neat\n        if r != 1500:\n            print('',end='')\n        else:\n            print('\\n',end='')\n        # Splitting the split content again in to the motor rpm\n        rpm=x.split(',')\n        # Verbose Logs: Coverted into list data\n        print('Formatted List Data: ',end='')\n        print(rpm, end='\\n')\n        # Constantly setting the velocity every 20ms\n        move(int(rpm[0]),int(rpm[1]),int(rpm[2]),int(rpm[3]),int(rpm[4]),r)\n        # Pausing for 2,s\n        wait(20,MSEC)\n    f.close()\n    # Just printing it is complete for info\n    print('Round Complete')\n    # Just printing it is safe to exit for info for the drivers\n    print('It is now safe to stop')\n\n \n# Main\n# Printing Press the touchled to activate for info\nprint('Press the check button to activate')\nwhile True:\n    # If the touch led pressed\n#    if touchled_9.pressing():\n#        # Start the read function\n#        read()\n#        # Then print program over\n#        print('Program Over')\n    if brain.buttonCheck.pressing():\n        # Start the read function\n        read()\n        # Then print program over\n        print('Program Over')","textLanguage":"python","rconfig":[{"port":[1],"name":"Left","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[6],"name":"Right","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[12],"name":"Purple","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[8],"name":"Shooter","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[7],"name":"BlueArm","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":2,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.2","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","target":"Physical"}